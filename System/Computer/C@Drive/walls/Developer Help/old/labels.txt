*dll:user32.dllの読み込み、関数の登録など。\n各関数についての詳細は、「関数について」の各項目をご参照ください。[ol(k),cmes(k),gblur(k),splitpos_x(k),splitpos_y(k),boxfa(k),windowmake(k),clock(k)]
*startup:親ウィンドウの作成など。\nフルスクリーンモードの時はフルスクリーンで、ウィンドウモードの時は1024×576のウィンドウが作成されます。[now(h),mode(h),scx(h),scy(h),phwnd(h)]
*loading:各データファイル、画像、フォントなどの読み込み。\nbuffer.hspはここで読み込まれます。[users(h),about(h),wtitle(h),buffer.hsp(i)]
*login:ログイン画面。\n背景画像にはぼかしを入れた画像が使われ、ユーザーアイコンは画面中央に表示されます。\nまた、usersやconfig、buffer 148はこちらで読み込まれます。[total_users(h),userimage_pos_x(h),config(h),password(h),userimages(h),cmes(k)]
*click_usermage:ユーザーアイコンをクリックした時の動作。\nどのユーザーアイコンがクリックされたのか検出します。[total_users(h),userimage_stat(h),username(h),*login(l),*load_userdata(l)]
*load_userdata:選択されたユーザーのデータを読み込みます。\nパスワード、壁紙などはここで読み込まれます。\nまた、変数の初期化、mci登録、onclickの登録もここで行われます。[config(h),password(h),userimage(h),wallpaper(h),scx(h),scy(h),*login(l),*click_userimage(l),*desktop(l),*move(l)]
*desktop:デスクトップ画面。\n親ウィンドウに表示されます。\nウィンドウタイマーはここで登録されます。\nタスクバーを表示するtaskbar.hspはここで読み込まれます。\ndsub=1のときはdsub=0にしてreturnします。\ndsubは主にスタートメニューを開いた時に使われます。[dsub(h),SetTimerA(k),clock(k),taskbar.hsp(i),*ontimer(l),*startmenu(l)]
*startmenu:スタートメニューの表示。\nスライドアニメーション表示時は親ウィンドウに表示されますが、\nアニメーションが終わったあとは子ウィンドウに描写されます\n（他の子ウィンドウにボタンが表示されてしまうため）。\nstartmenu_opened=0の時はスタートメニューが表示されていない状態を、\nstartmenu_opened=1の時はスタートメニューが表示されている状態を指します。[gsk(h),startmenu_opened(h),ret(h),closed_window(h),wID(h),windowmode(h),startmenu_wID(h),now(h),address(h),windowname(h),sub(h),clock(k),windowmake(k),boxfa(k),*taskbar_with_startmenu(l),*explorer_from_startmenu(l),*desktop(l)]
*taskbar_with_startmenu:スタートメニュー表示時のタスクバー。taskbar.hspはここでも読み込まれます。[sub(h),taskbar.hsp(i),*startmenu(l)]
*jump:各ラベルにジャンプするときに使います。\n今のところ使っていません。[windowname(h),the_windowname(h)]
*explorer_from_startmenu:スタートメニューで「エクスプローラー」が押された時の処理。\nアドレスがC;/に初期化され、*explorerにジャンプします。[address(h),*explorer(l),*startmenu(l)]
*explorer_goto_mycomputer:エクスプローラーのウィンドウ左側にあるサイドメニューの\n「マイコンピュータ」ボタンを押した時に、\nエクスプローラー上で直接マイコンピュータ（Computer;/）にジャンプするのに使います。[address(h),from_jump(h),window.hsp(i),*explorer(l)]
*explorer_from_close_window:今のところ使っていません。[address(h),windowname(h),*explorer(l),*window_close(l)]
*explorer:エクスプローラー。\ndisk.wdiskに書かれているファイルやフォルダを実際に表示します。\nWindowsやmacOSなどのエクスプローラーとほぼ同じ動作をします。\nまた、Shiftキーを押しながらファイルをクリックすると、新しいウィンドウで開きます。\n各変数については「変数について > エクスプローラー関連」をご参照ください。[address(h),address2(h),disk(h),the_folder(h),the_address(h),foldername(h),foldericon(h),files(h),file(h),total_files(h),dsub(h),ret(h),closed_window(h),wID(h),windowmode(h),windowname(h),now(h),address(h),from_jump(h),icon(h),windowtitle(h),fx(h),fy(h),total_icons(h),filename(h),order(h),fileicon(h),windowbutton_stat(h),windowmake(k),ol(k),clock(k),window.hsp(i),*explorer_from_startmenu(l),*explorer_goto_mycomputer(l),*explorer_from_close_window(l),*desktop(l),*explorer_jump(l),*move(l)]
*explorer_jump:エクスプローラー上でファイルやフォルダがクリックされた時の動作。\nまずどのファイルが押されたのかを検知し、\n次にそのファイルがファイルなのか、フォルダなのかを検知します。\nShiftキーを押しながらクリックすると、新しいウィンドウで開きます。[pushed_button_stat(h),total_files(h),windowbutton_stat(h),thebutton_stat(h),order(h),order_place(h),insp_order(h),wID(h),mouse_on_window(h),newwindow(h),from_jump(h),address(h),*explorer(l)]
*krone:標準搭載インターネットブラウザのKrone。\nkrone.hspを読み込みます。[ret(h),closed_window(h),wID(h),windowmode(h),windowname(h),phwnd(h),windows(h),SetParent(k),krone.hsp(i),*move(l)]
*gamutbox:標準搭載音楽プレイヤーGamutbox。\n*gamutboxでは、子ウィンドウを作成するところまで処理します。\nボタンの配置やファイルを開く作業などは*mp2で行います。[opened_gamutbox(h),closed_window(h),wID(h),gamutbox_wID_line(h),ret(h),windowmode(h),windowname(h),dsub(h),phwnd(h),windows(h),SetParent(k),*desktop(l),*mp2(l),*play(l),*move(l)]
*mp2:Gamutboxで、各ボタンの配置、ファイルデータの読み込みなどを行います。[fromm(h),olddir(h),mfile(h),mfilename(h),lyricsdata(h),ly(h),clock(k),nkfcnv(k),hspinet.as(i),*gamutbox(l),*play(l),*pause(l),*m_stop(l),*play_fileopen(l),*set_gamutbox(l),*play_error(l),*play_fileopen(l),*set_gamutbox(l),*move(l)]
*start_play:Gamutboxで、音楽ファイルの再生を始めます。\n*play内で再生を始めると、ウィンドウタイマー処理を行った時に動作が重くなってしまうため\nこのラベルで再生を始めます。[*gamutbox(l),*mp2(l),*play(l)]
*play:Gamutboxにおける、再生位置の表示、シークバーの表示、歌詞の表示など。\nただし、音楽ファイルの再生は*start_playで処理を行います。[playing(h),sub(h),gamutbox_wID_line(h),vol(h),ptx(h),pty(h),ptmiri(h),ltx(h),lty(h),mfilename(h),ptz(h),ltz(h),ly(h),lyricsdata(h),lyrics(h),sub(h),*gamutbox(l),*mp2(l),*start_play(l),*pause(l),*m_stop(l)]
*pause:Gamutboxにおいて、再生の一時停止を行います。[playing(h),*gamutbox(l),*mp2(l),*start_play(l),*play(l),*m_stop(l)]
*m_stop:Gamutboxにおいて、再生の停止を行います。\n*pauseとは違い、音楽ファイルごと閉じます。[playing(h),*gamutbox(l),*mp2(l),*start_play(l),*play(l),*pause(l)]
*play_error:Gamutboxにおいて、エラーが出た時の処理。[*gamutbox(l),*mp2(l),*play(l)]
*play_fileopen:Gamutboxで、音楽ファイルを開くときに使います。\nただし、Wallsを起動してから一番最初に開くときには*mp2で開きます。[*gamutbox(l),*mp2(l),*play(l)]
*set_gamutbox:Gamutboxで、音量の調節や歌詞設定が行えます。[ksk(h),info_set_y(h),vol(h),*gamutbox(l),*mp2(l),*play(l),*set_lyrics(l)]
*set_lyrics:Gamutboxにおいて、歌詞の設定を行うときに使います。\n最初に歌詞を枠内に入力し、曲に合わせてタイムタグを挿入していきます。\n「次の歌詞に挿入」を押すことで挿入されます。[lyrics_contents(h),lyrics_contents2(h),itcnt(h),*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l),*lyrics_save(l),*mesbox_color(l)]
*set_lyrics2:Gamutboxの歌詞設定において、再生位置やシークバーなどを表示します。[playing(h),lyrics(h),ptx(h),pty(h),ptmiri(h),ltx(h),lty(h),ptz(h),ltz(h),ltz2(h),*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*lyrics_save(l)]
*input_time:Gamutboxの歌詞設定において、タイムタグを挿入するときの動作。\n歌詞が表示されている行の前にタイムタグが挿入されます。\nobjprmを使って、タイムタグを挿入するたびにmesboxの内容を更新しています。[itcnt(h),lyrics_contents(h),lyrics_contents_old(h),lyrics_content_it(h),lyrics_content_it_next(h),lyrics_contents2(h),ptx(h),pty(h),ptz(h),*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics(l),*set_lyrics2(l),*pinpoint_input_time(l),*lyrics_save(l)]
*pinpoint_input_time:Gamutboxの歌詞設定において、カーソルがある場所にタイムタグを挿入します。\nただし、バグが有ったため今のところ使っていません。[itcnt(h),lyrics_contents(h),lyrics_contents_old(h),lyrics_contents_it(h),lyrics_contents2(h),ptx(h),pty(h),ptmiri(h),*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics(l),*set_lyrics2(l),*input_time(l),*lyrics_save(l)]
*lyrics_save:Gamutboxの歌詞設定において、歌詞データの保存を行います。\n歌詞データはdataフォルダのlyricsフォルダ内にlrc形式で保存されます。\nlrc形式ですので、文字化けしなければおそらくWalkmanでも使えます。[lyrics_contents(h),mfilename(h),nkfcnv(k),hspinet.as(i),*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l)]
*mesbox_color:mesboxの背景色の設定を行います。[*gamutbox(l),*mp2(l),*set_gamutbox(l),*set_lyrics(l),*set_lyrics2(l)*input_time(l),*pinpoint_input_time(l),*lyrics_save(l)]
*about_walls:お使いのWallsのバージョンやビルド番号が表示されます。\nバージョンやビルド番号は、dataフォルダのabout.wに記述されています。[opened_about_walls(h),ret(h),closed_window(h),wID(h),windowmode(h),windowname(h),dsub(h),phwnd(h),windows(h),about(h),wtitle(h),version(h),build(h),clock(k),SetParent(k),*desktop(l),*startmenu(l),*move(l)]
*move:子ウィンドウをクリックした時の動作。親ウィンドウがクリックされた時や、\n不可動ウィンドウがクリックされた時はそのままreturnします。\n最初にWindowFromPointAを使い、どのウィンドウがクリックされたかを特定してそのウィンドウを動かします。\nここでもwindow.hspが読み込まれます。[windows(h),phwnd(h),wID(h),windowmode(h),dontusewindowhsp(h),sub(h),WindowFromPointA(k),clock(k),windowmake(k),window.hsp(i),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l)]
*window_close:ウィンドウを閉じるときに使います。\n消す際にはカーソルの下にあるウィンドウを消します（mouse_on_window、clock関数内で取得）。[close_window(h),mouse_on_window(h),clock(k),window.hsp(i)]
*ontimer:ウィンドウタイマー処理を行うときに使います。\nここでもwindow.hspが読み込まれ、時計を表示して*desktopのオンタイマー登録部分にreturnします。[wID(h),closed_window(h),windowmode(h),from_ontimer(h),ot(h),SetTimerA(k),clock(k),window.hsp(i),*desktop(l)]
*ctlcoloredit:*mesbox_colorと同じように、mesboxなどの背景色を指定します。\nこちらは主にGamutbox以外のウィンドウで使います。[]
*exit:Wallsを閉じる時の処理。\nmciを終了して、ウィンドウタイマーを停止し、end命令で親ウィンドウを閉じます。[]