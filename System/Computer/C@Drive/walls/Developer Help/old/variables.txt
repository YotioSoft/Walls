mode:全画面表示か、ウィンドウ表示かを指定します。\nfullscreenで全画面、windowでウィンドウ表示となります。\n設定はコントロールパネルで行えますが、config.datの内容を直接書き換えて\n設定を変更することも可能です。\n\n主に使われるラベル;*startupなど[scx(h),scy(h),phwnd(h),*startup(l)]
laguage:言語の設定に使います。\n文字を表示する際に使うol関数内で主に使われます。[ltext(h),the_text(h),ol(k)]
address:エクスプローラー上のアドレスを指定する変数です。\n起動時はComputer;/になっています。\n各ファイルのアドレスはdiskフォルダのdisk.wdiskに記述されています。\n\n主に使われるラベル;*explorer、*explorer_jumpなど[address2(h),disk(h),the_folder(h),the_address(h),foldername(h),foldericon(h),files(h),filename(h),order(h),fileicon(h),insp_order(h),*explorer(l),*explorer_jump(l)]
systemfont:Walls全体で使われるフォントです。\nただし、一部ではフォントの設定が反映されません。\nほとんどのfont命令が使われてる部分ではsystemfont変数が使われています。[ol(k),*loading(l)]
ltext:ol関数内で使う変数です。\nol関数が使われた際、表示する文字列がltextに代入されます。\nその後、他言語に返還された文字列がthe_textに代入されますが、\n言語設定が日本語になっている場合はltextの内容がそのまま表示されます。[the_text(h),language(h),ol(k)]
the_text:ol関数内で使う変数です。\nltextの文字列を他言語に返還された文字列がthe_textに代入されます。\nただし、言語設定が日本語になっている場合はltextの内容がそのまま表示されますので、\nthe_textは使われません。[ltext(h),language(h),ol(k)]
ctext:cmes関数内で使う変数です。\ncmes関数が使われた際、表示する文字列がctextに代入されます。\n他言語が設定されている場合、ol関数で変換されてから表示されます。[cx(h),cy(h),cx2(h),cy2(h),cmes(k),ol(k)]
cx:cmes関数内で使う変数です。\ncmes関数が使われた際、cxには文字列が表示される左端のx座標が代入されます。\ncmesの使い方については、cmes関数のページをご覧ください。[ctext(h),cy(h),cx2(h),cy2(h),cmes(l)]
cy:cmes関数内で使う変数です。\ncmes関数が使われた際、cxには文字列が表示される一番上のy座標が代入されます。\ncmesの使い方については、cmes関数のページをご覧ください。[ctext(h),cx(h),cx2(h),cy2(h),cmes(l)]
cx2:cmes関数内で使う変数です。\ncmes関数が使われた際、cxには文字列が表示される右端のx座標が代入されます。\ncmesの使い方については、cmes関数のページをご覧ください。[ctext(h),cx(h),cy(h),cy2(h),cmes(l)]
cy2:cmes関数内で使う変数です。\ncmes関数が使われた際、cxには文字列が表示される一番下のy座標が代入されます。\ncmesの使い方については、cmes関数のページをご覧ください。[ctext(h),cx(h),cy(h),cx2(h),cmes(l)]
p1:いろいろな関数内で使われる変数です。\n\ngblurの場合;p1には画像をぼかす際に繰り返す回数が代入されます。数値が大きいほど、ぼかしも強くなります。\nsplitpos_x、splitpos_yの場合;p1には、座標を区切る数（いくつで割るか）が代入されます。[p2(h),start_spx(h),finish_spx(h),start_spy(h),finsh_spy(h),gblur(k),splitpos_x(k),splitpos_y(k)]
p2:主にgblur関数内で使われる変数です。\np1と同じく、こちらも数値が大きくなるほどぼかし度が高くなるようです。[p1(h),gblur(k)]
start_spx:splitpos_x関数内で使われる変数です。\np1で指定された数に座標を区切る際、区切り始める画面左側のx座標のことを指します。[p1(h),finish_spx(h),spx(h),splitpos_x(k)]
finish_spx:splitpos_x関数内で使われる変数です。\np1で指定された数に座標を区切る際、区切り終える画面右側のx座標のことを指します。[p1(h),start_spx(h),spx(h),splitpos_x(k)]
start_spy:splitpos_y関数内で使われる変数です。\np1で指定された数に座標を区切る際、区切り始める画面上側のy座標のことを指します。[p1(h),finish_spy(h),spy(h),splitpos_y(k)]
finish_spy:splitpos_y関数内で使われる変数です。\np1で指定された数に座標を区切る際、区切り終える画面下側のy座標のことを指します。[p1(h),start_spy(h),spy(h),splitpos_y(k)]
ax:boxfa関数内で使われる変数です。\n画面の半透明色を描写する際、左上のx座標が代入されます。[bx(h),ay(h),by(h),boxfa(k)]
bx:boxfa関数内で使われる変数です。\n画面の半透明色を描写する際、右下のx座標が代入されます。[ax(h),ay(h),by(h),boxfa(k)]
ay:boxfa関数内で使われる変数です。\n画面の半透明色を描写する際、左上のy座標が代入されます。[ax(h),bx(h),by(h),boxfa(k)]
by:boxfa関数内で使われる変数です。\n画面の半透明色を描写する際、右下のy座標が代入されます。[ax(h),bx(h),ay(h),boxfa(k)]
wID:ウィンドウのIDを指す変数です。\n時と場合によってどのウィンドウのIDが代入されているのかは異なりますが、\n主に子ウィンドウを作成するときや押されたボタンや\n表示するアイコンを特定するときなどに使います。[ret(h),windowx(h),windowy(h),phwnd(h),windows(h),windowmode(h),startmenu_wID(h),gamutbox_wID(h),setup_wID(h),closed_window(h),windowmake(k),SetParent(k),window.hsp(i),*startmenu(l),*explorer(l),*explorer_jump(l),*krone(l),*gamutbox(l),*about_walls(l),*move(l),*ontimer(l)]
windowx:windowmake関数内で使われる変数です。\n新しく作成する子ウィンドウのxサイズが代入されます。[wID(h),windowy(h),phwnd(h),windows(h),windowmode(h),windowmake(k),SetParent(k)]
windowy:windowmake関数内で使われる変数です。\n新しく作成する子ウィンドウのyサイズが代入されます。[wID(h),windowx(h),phwnd(h),windows(h),windowmode(h),windowmake(k),SetParent(k)]
clock_mode:clock関数内で使われる変数です。\nタスクバー右側の時計を表示する際に、ループに入るか、returnするかを指定します。\n0でループ、1でreturnです。[clock(k)]
phwnd:新しいウィンドウを作成するときに使う変数です。\nウィンドウを作成した時に、hwnd値を記録するのに使います。\n\n主に使われるラベル;*startup、*krone、*gamutbox、*about_walls、*move[ret(h),wID(h),mouse_on_window(h),windowmode(h),SetParent(k),clock(k),windowmake(k),*startup(l),*krone(l),*gamutbox(l),*about_walls(l),*move(l)]
mouse_on_window:マウスカーソルの下にある子ウィンドウのIDを特定するときに使う変数です。\n特定はclock関数内で行われます。\n注：親ウィンドウ（ウィンドウID 0）は特定されません。[ret(h),wID(h),windows(h),close_window(h),SetParent(k),WindowFromPointA(k),clock(k),*explorer_jump(l),*window_close(l)]
labelname:各ラベルで取得される、今いるラベルの名前を記録する変数です。\nlabelnameはラベル型変数とは違い、通常の文字列で記録されています。\nlabelnameの表示はclock関数内で、親ウィンドウのタイトルバーに表示されます。[now(h),label_ontimer(h),wID(h),mouse_on_window(h),windows(h),clock(k)]
now:各ラベルで取得される、今いるラベルの名前を記録するラベル型変数です。\nラベル型変数ですので、gotoやgosub、buttonなどで\nそのラベルにジャンプするとき以外は恐らく使えません。[labelname(h),label_ontimer(h),wID(h),mouse_on_window(h),windows(h),clock(k)]
label_ontimer:初期値は0で、ウィンドウタイマー処理が行われると1になる変数です。\n*ontimerにジャンプすると1になります。[labelname(h),wID(h),mouse_on_window(h),SetTimerA(k),clock(k),*ontimer(l)]
windows:今まで開いた子ウィンドウの総数です。\n1つウィンドウを開くたびに加算されます。[ret(h),wID(h),phwnd(h),windowmode(h),SetParent(k),windowmake(k),clock(k),*startmenu(l),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l)]
sub:異なるラベル内へgosub命令でサブルーチンしたい時に使います。\n例えば、*A内に\nsub=1 ; gosub*B\nと表記し、*B内の任意の場所に\nif sub=1 ; sub=0 ; return\nと書けば、*Aから*Bの途中の部分までサブルーチンすることができます。\nsub=1のままではずっとサブルーチンし続けてしまうので、returnする際にはsub=0に戻す必要があります。\nsub変数は同時に復数扱うことがあるので、wcsubやdsubなど、変数名が異なることもあります。[wcsub(h),dsub(h),clock(k),*startmenu(l),*taskbar_with_startmenu(l),*explorer(l),*play(l),*move(l)]
wcsub:clock関数内で使われるsub変数です。\nsub変数の詳細についてはsub変数の項目をご覧ください。[sub(h),clock(k)]
dsub:*desktopにgosub命令でサブルーチンする際に使われるsub変数です。\nsub変数の詳細についてはsub変数の項目をご覧ください。[sub(h),*desktop(l),*explorer(l),*gamutbox(l),*about_walls(l)]
year:clock関数内で取得される変数で、\n文字通り現在の年を指します。[month(h),date(h),hour(h),min(h),sec(h),clock(k)]
month:clock関数内で取得される変数で、\n文字通り現在の月を指します。[year(h),date(h),hour(h),min(h),sec(h),clock(k)]
date:clock関数内で取得される変数で、\n文字通り現在の日付を指します。[year(h),month(h),hour(h),min(h),sec(h),clock(k)]
hour:clock関数内で取得される変数で、\n文字通り現在の時間を指します。\n数値が10以下の場合は2桁目にを足した値が表示されます。\n例：6時5分7秒 → 06:05.07[year(h),month(h),date(h),min(h),sec(h),clock(k)]
min:clock関数内で取得される変数で、\n文字通り現在の分を指します。\n数値が10以下の場合は2桁目にを足した値が表示されます。\n例：6時5分7秒 → 06:05.07[year(h),month(h),date(h),hour(h),sec(h),clock(k)]
sec:clock関数内で取得される変数で、\n文字通り現在の秒を指します。\n数値が10以下の場合は2桁目にを足した値が表示されます。\n例：6時5分7秒 → 06:05.07[year(h),month(h),date(h),hour(h),min(h),clock(k)]
scx:パソコンのディスプレイ全体のxサイズが代入されます。\n代入は*startupで、ginfo(20)をもとに取得されます。\nウィンドウモードの場合は、scxには1024、scyには576が代入され、\n1024x576の親ウィンドウが表示されます。[mode(h),scy(h),*startup(l)]
scy:パソコンのディスプレイ全体のyサイズが代入されます。\n代入は*startupで、ginfo(21)をもとに取得されます。\nウィンドウモードの場合は、scxには1024、scyには576が代入され、\n1024x576の親ウィンドウが表示されます。[mode(h),scx(h),*startup(l)]
users:登録されているユーザーリストの内容です。\n*loadingで読み込まれ、*loginで使われます。[about(h),*loading(l),*login(l)]
about:Wallsのバージョン情報や、dataフォルダのabout.wの内容が代入されます。\n*loadingで読み込まれます。aboutの1行目はタイトルで、wtitleに代入されます。\n2行目はバージョンで、3行目はビルド番号です。\nバージョンとビルド番号は*about_wallsでそれぞれ\nversion、build変数に代入されます。[wtitle(h),version(h),build(h),*startup(l),*about_walls(l)]
wtitle:Wallsのタイトルです。\n*loadingで読み込まれたaboutの1行目から取得されます。[about(h),version(h),build(h),*loading(l),*about_walls(l)]
version:Wallsのバージョンです。\n*loadingで読み込まれたaboutの2行目から取得されます。[about(h),wtitle(h),build(h),*loading(l),*about_walls(l)]
build:Wallsのビルド番号です。\n*loadingで読み込まれたaboutの3行目から取得されます。[about(h),wtitle(h),version(h),*loading(l),*about_walls(l)]
total_users:登録されているユーザーの総数です。\n*loginでusersの行数から取得されます。[users(h),usernames(h),*login(l)]
usernames:登録されている各ユーザーのユーザー名です。\n*loginで取得されます。[users(h),total_users(h),*login(l)]
config:ユーザーの設定ファイルの全体です。[password(h),userimages(h),*login(l)]
password:ユーザーのパスワードです。\nconfig変数から取得されます。[config(h),*login(l)]
userimages:ユーザーアイコンの番号です。\nconfig変数から取得されます。[config(h),*login(l)]
wallpaper:ユーザーが設定している壁紙画像がある場所です。\nconfig変数から取得されます。[config(h),*login(l)]
gsk:アニメーション表示時にループするたびに減速する割合を指定します。[ksk(h),scx(h),scy(h),*startmenu(l)]
ksk:アニメーション表示時にループするたびに加速する割合を指定します。[gsk(h),scx(h),scy(h),*startmenu(l)]
startmenu_opened:スタートメニューが開いているか否かを示します。\n開いているときは数値が1に、開いていない時は0になります。[*startmenu(l)]
ret:新しく子ウィンドウを作成するとき\n次の子ウィンドウのIDを示します。[wID(h),windowmode(h),startmenu_wID(h),windowname(h),closed_window(h),windowmake(k),*startmenu(l),explorer(l),*krone(l),*gamutbox(l),*about_walls(l)]
windowmode:各子ウィンドウのモードを指定します。\nモードは子ウィンドウごとに異なり、0はwindow.hspを使うウィンドウ、1はwindow.hspを使わないウィンドウ、\n2は不可動ウィンドウです。各子ウィンドウのモードの判別は*moveで行われます。\n\n主に使われるラベル;*startmenu、*explorer、*krone、*gamutbox、*about_walls、*move[ret(h),wID(h),windowname(h),window.hsp(i),*startmenu(l),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l),*move(l),*window_close(l)]
startmenu_wID:スタートメニューのウィンドウIDです。\nスタートメニューを閉じるときに使います。[ret(h),wID(h),windowmode(h),windowname(l),startmenu_opened(l),*startmenu(l)]
windowname:各子ウィンドウの名前です。\n開発段階では*jumpで使っていましたが、現在は使っていません。\nウィンドウを特定するのに使っていました。[ret(h),wID(h),windowmode(h),*jump(l)]
address2:address変数に,を付け足した変数です。\ndiskフォルダ内のdisk.wdiskからaddressの内容を読み取るのに使います。\n\n主に使われるラベル;*explorer[address(h),disk(h),*explorer(l)]
disk:diskフォルダ内のwdiskファイルの内容がnoteloadによって代入されます。\ndisk変数から特定の行をthe_folderに代入し、そこからsplitでthe_address、foldername、foldericon、filesに分けていきます。\n\n主に使われるラベル;*explorer[the_folder(h),address2(h),the_address(h),foldername(h),foldericon(h),files(h),*explorer(l)]
the_folder:エクスプローラーで表示するフォルダの内容が書かれたwdiskファイルの一行分を切り出した変数です。\nthe_folderからsplitでthe_address、foldername、foldericon、filesに分けていきます。\n\n主に使われるラベル;*explorer[disk(h),address2(h),the_address(h),foldername(h),foldericon(h),files(h),*explorer(l)]
the_address:wdiskファイルの内容のうち、エクスプローラーで表示するフォルダのアドレスを示します。\nこの変数は余分な部分を切り取るためにあるため使いません。\n\n主に使われるラベル;*explorer[disk(h),address2(h),the_folder(h),foldername(h),foldericon(h),files(h),*explorer(l)]
foldername:wdiskファイルの内容のうち、エクスプローラーで今表示しているフォルダの名前を示します。\n\n主に使われるラベル;*explorer[disk(h),address2(h),the_folder(h),the_address(h),foldericon(h),files(h),*explorer(l)]
foldericon:wdiskファイルの内容のうち、エクスプローラーで今表示しているフォルダのアイコンのバッファ番号を示します。\n\n主に使われるラベル;*explorer[disk(h),address2(h),the_folder(h),the_address(h),foldername(h),files(h),*explorer(l)]
files:注：fileとは異なります。\nwdiskファイルの内容のうち、いま表示しているフォルダの中にある\nファイルやフォルダの名前、アイコン、アドレスなどを示します。\nfilesは*explorerで一つ一つのファイルごとにfileに区切ります。\n\n主に使われるラベル;*explorer[file(h),disk(h),address2(h),the_folder(h),the_address(h),foldericon(h),foldername(h),*explorer(l)]
file:注：filesとは異なります。\nfilesの内容をさらに一つ一つのファイルやフォルダごとに区切ったものです。\nfileは、*explorerで更にbrase、filename、order、fileiconに区切られます。\n\n主に使われるラベル;*explorer[files(h),disk(h),address2(h),the_folder(h),the_address(h),foldericon(h),foldername(h),*explorer(l)]
fx:エクスプローラーでファイルを表示していく時に、一つ一つのファイルを表示する位置です。\n順に一つのファイルを表示するごとにfxに80ずつ加算されて右にずれていき、\n一番右に到達したとき、fyが加算され、次の行に表示されます。\n\n主に使われるラベル;*explorer[fy(h),total_files(h),total_icons(h),*explorer(l)]
fy:エクスプローラーでファイルを表示していく時に、一つ一つのファイルを表示する位置です。\n順に一つのファイルを表示するごとにfxに80ずつ加算されて右にずれていき、\n一番右に到達したとき、fyが加算され、次の行に表示されます。\n\n主に使われるラベル;*explorer[fx(h),total_files(h),total_icons(h),*explorer(l)]
total_files:エクスプローラーで今表示しているフォルダ内にある\nファイルやフォルダの総数です。\nファイルやフォルダを表示するときや押されたファイルを特定するときに使います。\n\n主に使われるラベル;*explorer、*explorer_jump[total_icons(h),files(h),file(h),the_folder(h),address2(h),*explorer(l),*explorer_jump(l)]
total_icons:起動してからエクスプローラー内で今まで表示したアイコンの総数です。\nアイコンをバッファするときに使います。\n\n主に使われるラベル;*explorer[total_files(h),files(h),file(h),the_folder(h),address2(h),*explorer(l)]
filename:エクスプローラーでファイルを表示するとき、\n一つ一つのファイルの名前を示します。\nfilenameはfile変数から取得されます。\n\n主に使われるラベル;*explorer[file(h),files(h),order(h),fileicon(h),*explorer(l)]
order:エクスプローラーでファイルを表示するとき、\n一つ一つのファイルの指示を示します。\n例えば、「Kroneを開け」という指示の場合、orderには\nopen Krone.run\nという文字列が代入されます。\norderは、*explorer_jumpでファイルを開くときにも使います。\norderはfile変数から取得されます。\n\n主に使われるラベル;*explorer、*explorer_jump[file(h),files(h),fileicon(h),*explorer(l),*explorer_jump(l)]
fileicon:エクスプローラーでファイルを表示するとき、\n一つ一つのファイルのアイコンのバッファ番号を示します。\nfileiconはfile変数から取得されます。\n\n主に使われるラベル;*explorer[file(h),files(h),order(h),filename(h),*explorer(l)]
windowbutton_stat:エクスプローラー上の各ファイルアイコンのボタンのstat値です。\n各ファイルを開くとき、どのボタンが押されたのかを特定するのに使います。\n\n主に使われるラベル;*explorer、*explorer_jump[pushed_button_stat(h),thebutton_stat(h),total_files(h),*explorer(l),*explorer_jump(l)]
pushed_button_stat:エクスプローラー上で押されたファイルアイコンのstat値です。\n各ファイルを開くとき、どのボタンが押されたのかを特定するのに使います。\n\n主に使われるラベル;*explorer_jump[windowbutton_stat(h),thebutton_stat(h),total_files(h),*explorer(l),*explorer_jump(l)]
thebutton_stat:*explorer_jumpにて、\nwindowbutton_statとpushed_button_statを使って特定されたボタンのstat値です。\n\n主に使われるラベル*explorer_jump[windowbutton_stat(h),pushed_button_stat(h),total_files(h),*explorer_jump(l)]
order_place:*explorerで検出されたorder変数のうち、\n指定されたジャンプ先のアドレスまたはファイル名が代入されます。\n\n主に使われるラベル;*explorer_jump[order(h),insp_order(h),file(h),files(h),thebutton_stat(h),*explorer(l),*explorer_jump(l)]
insp_order:*explorer_jumpで検出されたorder_place変数の中に、\n.（ドット、拡張子）が含まれているか否かを示します。\n拡張子が含まれていればファイル、含まれていなければフォルダとみなします。\ninstrを使っているので、含まれていない場合は-1に、含まれている場合は-1以外になります。\n\n主に使われるラベル;*explorer_jump[order(h),order_place(h),file(h),files(h),*explorer(l),*explorer_jump(l)]
newwindow:エクスプローラーにおいて、\nShiftキーを押しながらフォルダのアイコンをクリックした場合、newwindowの値が1になります。\nnewwindowが1の時は、クリックしたフォルダを新しいウィンドウで開きます。\n\n主に使われるラベル;*explorer_jump[wID(h),from_jump(h),windowmake(k),*explorer(l),*explorer_jump(l)]
from_jump:エクスプローラーにおいて、*explorer_jumpから*explorerに戻ったことを示します。\nsub変数のような役割を持っており、from_jumpが1の時はフォルダを開いた時に新しいウィンドウで開かずに、\n同じウィンドウで開きます。ただし、Shiftキーを押しながら開いた場合、\nnewwindowが1となり新しいウィンドウで開かれるため、from_jumpは0のままになります。\nまた、*explorer_jumpを使わない時でも、新しいエクスプローラーのウィンドウを開きたくない時に使います。\n例えば、window.hspで、エクスプローラーのサイドメニューの「マイコンピュータ」ボタンが押されたとき、\n既に開かれているエクスプローラー上で直接マイコンピュータにジャンプするのにも使います。\n\n主に使われるラベル;*explorer、*explorer_jump、*explorer_goto_mycomputer[sub(h),newwindow(h),ret(h),wID(h),windowmode(h),windowname(h),windowmake(k),*explorer(l),*explorer_jump(l),*explorer_goto_mycomputer(l)]
olddir:GamutBoxにおいて、ファイル選択ダイアログが開かれる前の\nカレントディレクトリを一時的に記録する変数です。\nファイルが開かれたあとはchdir命令によりカレントディレクトリがolddirに記録された場所に戻されます。\n\n主に使われるラベル;*mp2[fromm(h),*gamutbox(l),*mp2(l)]
fromm:Gamutboxにおいて、Wallsを起動してから初めてGamutBoxを開いたことを示す変数です。\nfrommが0の場合GamutBoxを開いた時にファイル選択ダイアログが開かれますが、\nfrommが1の場合はファイル選択ダイアログが開かれずにそのまま先に開かれた音楽ファイルの再生を続けます。\n\n主に使われるラベル;*mp2、*play_fileopen[olddir(h),*gamutbox(l),*mp2(l),*play_fileopen(l)]
ly:Gamutboxにおいて、開かれた音楽ファイルの歌詞データが存在するか否かを示す変数です。\nもし存在した場合、lyは1となり、歌詞の表示が行われます。\n\n主に使われるラベル;*mp2、*play[lyricsdata(h),*gamutbox(l),*mp2(l),*play(l)]
lyricsdata:GamutBoxにおいて、歌詞データが格納されているテキストファイルの内容が代入される変数です。\n歌詞データはdataフォルダのlyricsフォルダ内に保存されます。\n\n主に使われるラベル;*mp2、*play[ly(h),*gamutbox(l),*mp2(l),*play(l)]
playing:GamutBoxで音楽ファイルを再生している場合は1になります。\nclock関数で、playingが1の場合は*playにサブルーチンします。\n\n主に使われるラベル;*play、*pause、*m_stop、*set_lyrics2[gamutbox_wID_line(h),clock(k),*gamutbox(l),*play(l),*pause(l),*m_stop(l),*set_lyrics2(l)]
gamutbox_wID_line:GamutBoxのウィンドウID（wID）を示します。\nplaying=1の場合は、clock関数で*playにサブルーチンするときにも使います。\n\n主に使われるラベル;*gamutbox、*play[wID(h),windowmode(h),playing(h),clock(k),*gamutbox(l)]
vol:GamutBoxの音量を示します。\nvol=1000のとき音量は最大になります。\n\n主に使われるラベル;*play[*gamutbox(l),*play(l)]
ptx:GamutBoxで音楽ファイルを再生しているとき、\n再生位置の分を示します。\n\n主に使われるラベル;*play、*set_lyrics2、*input_time、*pinpoint_input_time[pty(h),ptmiri(h),ptz(h),ltx(h),lty(h),ltz(h),*gamutbox(l),*play(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l)]
pty:GamutBoxで音楽ファイルを再生しているとき、\n再生位置の秒を示します。\n\n主に使われるラベル;*play、*set_lyrics2、*input_time、*pinpoint_input_time[ptx(h),ptmiri(h),ptz(h),ltx(h),lty(h),ltz(h),*gamutbox(l),*play(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l)]
ptmiri:GamutBoxで音楽ファイルを再生しているとき、\n再生位置のミリ秒を示します。\n\n主に使われるラベル;*play、*set_lyrics2、*input_time、*pinpoint_input_time[ptx(h),pty(h),ptz(h),ltx(h),lty(h),ltz(h),*gamutbox(l),*play(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l)]
ptz:GamutBoxで音楽ファイルを再生しているとき、\n再生位置の全体を通した秒数を示します。\n例えば、再生開始から1分5秒が経ったとき、ptxは1、ptyは5になりますが、\nptzは65になります。\n主にシークバーの表示に使われます。\n\n主に使われるラベル;*play[ptx(h),pty(h),pitmiri(h),ptz(h),lty(h),ltz(h),*gamutbox(l),*play(l)]
ltx:GamutBoxで音楽ファイルを再生しているとき、\nその音楽ファイルの全体の長さの分を示します。\n\n主に使われるラベル;*play、*set_lyrics2[ptx(h),pty(h),pitmiri(h),ptz(h),lty(h),ltz(h),*gamutbox(l),*play(l),*set_lyrics2(l)]
lty:GamutBoxで音楽ファイルを再生しているとき、\nその音楽ファイルの全体の長さの秒を示します。\n\n主に使われるラベル;*play、*set_lyrics2[ptx(h),pty(h),pitmiri(h),ptz(h),ltx(h),ltz(h),*gamutbox(l),*play(l),*set_lyrics2(l)]
ltz:GamutBoxで音楽ファイルを再生しているとき、\nその音楽ファイルの全体の長さを通した秒数を示します。\n例えば、曲の全体の長さが1分5秒のとき、ptxは1、ptyは5になりますが、\nptzは65になります。\n主にシークバーの表示に使われます。\n\n主に使われるラベル;*play[ptx(h),pty(h),pitmiri(h),ptz(h),ltx(h),lty(h),*gamutbox(l),*play(l)]
mfilename:GamutBoxにおいて、再生中の音楽ファイルの名前が代入されます。\n\n主に使われるラベル*mp2、*play、*lyrics_save[fromm(h),*mp2(l),*play(l),*lyrics_save(l),*gamutbox(l)]
info_set_y:*set_gamutboxでGamutBoxの設定メニューを開くとき、\n設定メニューの大きさのy座標を示します。\n\n主に使われるラベル;*set_gamutbox[ksk(h),open_set_gamutbox(h),*set_gamutbox(l),*gamutbox(l)]
open_set_gamutbox:GamutBoxで設定メニューが開かれている場合は1に、開かれていない場合は0になります。\n\n主に使われるラベル;*set_gamutbox[ksk(h),info_set_y(h),*set_gamutbox(l),*gamutbox(l)]
lyrics_contents:GamutBoxの歌詞設定において、\nmesboxに入力された歌詞の内容が代入されます。\n\n主に使われるラベル;*set_lyrics、*set_lyrics2、*input_time、*pinpoint_input_time、*lyrics_save[lyrics_contents2(h),lyrics_contents_old(h),lyrics_content_it(h),lyrics_content_it_next(h),itcnt(h),*set_lyrics(l),*set_lyrics2(l),*input_time(l),*pinpoint_input_time(l),*lyrics_save(l),*gamutbox(l)]
lyrics_contetns2:GamutBoxの歌詞設定において、\n歌詞設定中の「次の行」にタイムタグを挿入した状態のlyrics_contentsが代入されます。\n\n例えば、lyrics_contents（入力された歌詞）が「あいうえお　かきくけこ」という内容だった場合、\nlyrics_contents2は「{01:30:10}あいうえお　かきくけこ」といったふうに、タイムタグが挿入された内容になります。\nタイムタグには「次の歌詞に挿入」のボタンを押した時点の時間が記録されます。\n\n主に使われるラベル;*set_lyrics、*input_time、*pinpoint_input_time[lyrics_contents(h),lyrics_contents_old(h),lyrics_content_it(h),lyrics_content_it_next(h),itcnt(h),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*gamutbox(l)]
lyrics_contents_old:GamutBoxの歌詞設定において、\nタイムタグが入力される前のlyrics_contentsの内容が代入されます。\nつまり、歌詞設定を開いて一番最初に入力欄に入力した歌詞全体がそのままlyrics_contents_oldに代入されます。\n\n主に使われるラベル;*input_time、*pinpoint_input_time[lyrics_contents(h),lyrics_content_it(h),lyrics_content_it_next(h),itcnt(h),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*gamutbox(l)]
itcnt:GamutBoxの歌詞設定において、\n1行目から順に歌詞にタイムタグを挿入していくときに、\n今現在挿入している行数を示します。\n*input_timeや*pinpoint_input_timeにおいて、次の歌詞を取得するときなどに使います。\n\n*input_time[lyrics_contents(h),lyrics_content_it(h),lyrics_content_it_next(h),lyrics_contents_old(h),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*gamutbox(l)]
lyrics_content_it:GamutBoxの歌詞設定において、\n今タイムタグを挿入している歌詞の一行分が代入されます。\n\n主に使われるラベル;*input_time、*pinpoint_input_time[lyrics_content_it_next(h),lyrics_contents(h),lyrics_contents_old(h),itcnt(h),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*gamutbox(l)]
lyrics_content_it_next:GamutBoxの歌詞設定において、\n次にタイムタグを挿入する歌詞の一行分が代入されます。\n\n主に使われるラベル;*input_time、*pinpoint_input_time[lyrics_content_it(h),lyrics_contents(h),lyrics_contents_old(h),itcnt(h),*set_lyrics(l),*input_time(l),*pinpoint_input_time(l),*gamutbox(l)]
opened_about_walls:*about_wallsにおいて、\n既に「Wallsについて」が開かれているか否かを示します。\n開かれている場合は1が、開かれていない場合は0が*about_wallsで代入されます。\n主に二重起動防止に使われています。\n\n主に使われるラベル;*about_walls[ret(h),wID(h),windowmode(h),windowname(h),dsub(h),phwnd(h),windows(h),SetParent(k),*about_walls(l),*desktop(l)]
dontusewindowhsp:各子ウィンドウで、window.hspを使うか使わないかを示します。\n使う場合は0、使わない場合は1になります。\n新しく開いた子ウィンドウのwindowmodeの値が1の場合は、dontusewindowhspも1になります。\n\n主に使われるラベル;*move[windowmode(h),wID(h),window.hsp(i),*move(l)]
close_window:各子ウィンドウで、閉じるボタンが押されたウィンドウのIDが代入されます。\nclose_windowの値は、閉じるボタンを押した時のmouse_on_windowの値と同じになります。\n\n主に使われるラベル;*window_close[mouse_on_window(h),clock(k),*window_close(l)]
from_ontimer:window.hspを読み込むとき、*ontimerから来たことを示します。\nfrom_ontimer=1の場合、window.hspでは子ウィンドウのタトルバーに表示されるボタン等は表示しません。\n\n主に使われるラベル;*ontimer[sub(h),window.hsp(i),*ontimer(l)]

windowmode:window.hspを読み込むときに使います。\n開いているウィンドウがエクスプローラーなのか、設定画面なのかを判断するのに使います。\n\n主に使われるラベル;*explorer、*setup[windowmode(h),window.hsp(i),*explorer(l),*setup(l)]
setup_wID:設定画面のウィンドウIDを示します。\n\n主に使われるラベル;*setup、*setup_user[wID(h),*setup(l),*setup_user(l)]

expID:エクスプローラーのウィンドウのIDです。\n本質はwIDと同じですが、この変数はエクスプローラー上でしか扱われません。\n\n主に使われるラベル;*explorer、*setup[wID(h),window.hsp(i),*explorer(l),*setup(l)]
closed_windows_total:起動時から今までに閉じられたのウィンドウの総数です。\n\n主に使われるラベル;*startmenu、*explorer、*krone、*gamutbox、*about_walls、*setup、*window_close[wID(h),ret(h),closed_window(h),used_closed_window(h),*startmenu(l),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l),*setup(l),*window_close(l)]
closed_window:既に閉じられたウィンドウのIDです。\n\n例えば、Walls起動直後に最初にスタートメニューを開いてその後スタートメニューを閉じた場合、\n一番最初に閉じたウィンドウのIDがそのスタートメニューのID（起動後一番最初に開いたのでwID = 2）なので、\nclosed_window(0)にはその元スタートメニューのIDである2が代入されます。\n\nこれは、ウィンドウIDをリサイクルする際に使います。\nWallsではプログラムの関係上99個までの子ウィンドウしか開けませんが、\nウィンドウIDをリサイクルすることによって、同時に99個以上の子ウィンドウを開かないかぎり\nいくらでも子ウィンドウを開くことができます。\n\n主に使われるラベル;*startmenu、*explorer、*krone、*gamutbox、*about_walls、*setup、*window_close[wID(h),ret(h),closed_windows_total(h),used_closed_window(h),*startmenu(l),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l),*setup(l),*window_close(l)]
used_closed_window:リサイクルされたウィンドウIDのうち、\n既に2回以上使われたウィンドウIDの総数です。\nこの変数とリサイクルIDの総数であるclosed_windows_totalが同じ数になると、\nリサイクルIDを使うことをやめ、新しいウィンドウIDを使うことになります。\n\n主に使われるラベル;*startmenu、*explorer、*krone、*gamutbox、*about_walls、*setup、*window_close[wID(h),ret(h),closed_windows_total(h),closed_window(h),*startmenu(l),*explorer(l),*krone(l),*gamutbox(l),*about_walls(l),*setup(l),*window_close(l)]

ot:On Timerの略。\n*ontimerにジャンプした回数を指します。[*ontimer(l)]